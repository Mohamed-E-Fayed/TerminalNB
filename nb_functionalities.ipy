#This file contains all implementations of any function depending on existing magic functions in ipython. 
from  helping_functions import * 
from constants import *  
from variables import * 
import os 
from functools import singledispatch 

"""
@singledispatch
def run_cell(lst=[], result_file= False): 
    
    #This function runs a cell given its name. This function uses the '%run"  magic command with '-i' option. 
    #This alternative aims to run multiple cells in their order.
    
    project_path = os.getcwd() 
    for num in lst:
        name = get_cell_name(num)
        name = name[:name.rfind(DOT)]
        %run -i "$project_path/$name" 
"""
#@run_cell.register(int)
def run_cell(num=int(0), result_file= False): 
    """
    This function runs a cell given its name. This function uses the '%run"  magic command with '-i' option. 
    """
    name = get_cell_name(num)
    name = name[:name.rfind(DOT)]
    project_path = os.getcwd() 
    %run -i "$project_path/$name" 



def rc(num, result_file = False): 
    """
   This function is an appreviation for "run_cell()" function.
    """
    run_cell(num, result_file)

def run_cell_range(start, end):
    """
    This function runs cells from start till end -1 , similar to convention used in lists
    """
    for i in range(start, end):
        rc(i)

def rcr(start, end):
    """
    appreviation for run_cell_range(start, end)
    """
    run_cell_range(start, end)

def run_all_from(num):
    """
    This function runs all cells starting from cell of given number. 
    e.g. Assume you have folder containing 1.py, 2.py and 3.py, 
    if you give it '2', it will run onlhy 2.py and 3.py
    """
    project_path = os.getcwd()
    files = os.listdir() 
    files = [f for f in files if '.py' in f]
    files.sort()
    files = files[files.index(get_cell_name(num)) +1:]
    for file in files:
        file = file[:-3]
        %run -i "$project_path/$file"

def raf(num):
    """
    This function is an appreviation for run_all_from(num)
    """
    run_all_from(num)
